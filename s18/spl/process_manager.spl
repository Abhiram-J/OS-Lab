breakpoint;

alias func_num R1;
alias currPID R2;

if ( func_num == 2 ) then
    multipush(R1,R2);

    alias func_num R1;
	alias user_area_page_num R2;
    func_num = 2;
    user_area_page_num = [PROCESS_TABLE + currPID*16 + 11];

    call MEMORY_MANAGER;

    multipop(R1,R2);
endif;


if ( func_num == 3 ) then
	multipush(R1,R2);
    alias func_num R1;
    func_num = 4;
    call PROCESS_MANAGER;
    func_num = 2;
    call PROCESS_MANAGER;
    multipop(R1,R2);

    [PROCESS_TABLE + currPID*16 + 4] = TERMINATED;
	
endif;

if ( func_num == 4 ) then
    alias ptbr R3;
    ptbr = [PROCESS_TABLE + 16*currPID + 14]; 
	[ptbr + 0] = -1; 
	[ptbr + 1] = "0000"; 
	[ptbr + 2] = -1; 
	[ptbr + 3] = "0000";

    alias i R4;
    i = 4;
    while( i <= 18 ) do
        if ([ptbr + i] != -1 ) then
            multipush(R1,R2,R3,R4);

            alias func_num R1;
	        alias page_num R2;
            func_num = 2;
            page_num = [ptbr + i];

            call MEMORY_MANAGER;

            multipop(R1,R2,R3,R4);
            [ptbr + i + 1] = "0000";
        endif;
        i = i + 2;
    endwhile; 
	
endif;

breakpoint;
return;
